{"version":3,"sources":["localService/mockserver.js"],"names":["sap","ui","define","MockServer","Log","UriParameters","XMLHelper","oMockServer","_sAppModulePath","init","oUriParameters","window","location","href","sJsonFilesUrl","require","toUrl","sManif+
estUrl","sErrorParam","get","iErrorCode","oManifest","jQuery","syncGetJSON","data","oDataSource","dataSources","oMainDataSource","mainService","sMetadataUrl","settings","localUri","replace","sMockServerUrl","test","uri","aAnnotations","annotations","root+
Uri","config","autoRespond","autoRespondAfter","simulate","sMockdataBaseUrl","bGenerateMissingMockData","aRequests","getRequests","fnResponse","iErrCode","sMessage","aRequest","response","oXhr","respond","Content-Type","forEach","aEntry","path","toString+
","indexOf","start","info","length","sAnnotationName","oAnnotation","sUri","sLocalUri","requests","method","RegExp","oAnnotations","sjax","url","dataType","respondXML","serialize","getMockServer"],"mappings":"AAAAA,IAAIC,GAAGC,QACN,8BACA,eACA,8BACA,yBACE+
,SAAUC,EAAYC,EAAKC,EAAeC,GAC5C,YACA,IAAIC,GACHC,EAAkB,gDAGnB,QASCC,KAAM,WAEL,GAAIC,GAAiB,GAAIL,GAAcM,OAAOC,SAASC,MACtDC,EAAgBd,IAAIC,GAAGc,QAAQC,MAdTR,uEAetBS,EAAejB,IAAIC,GAAGc,QAAQC,MAAMR,EAAkB,iBAEtDU,EAAcR,EAAeS,IAAI,aACjCC,EAA6B,eAAhBF,EAA+B,IAAM,IA+
ClDG,EAAYC,OAAOtB,IAAIuB,YAAYN,GAAcO,KACjDC,EAAcJ,EAAU,WAAWK,YACnCC,EAAkBF,EAAYG,YAC9BC,EAAe7B,IAAIC,GAAGc,QAAQC,MAAMR,EAAkBmB,EAAgBG,SAASC,SAASC,QAAQ,OAAQ,IAAM,QAE9GC,EAAiB,QAAQC,KAAKP,EAAgBQ,KAAOR,EAAgBQ,IAAMR,EAAgBQ,IAAM,IACjGC,EAAeT,EAAgBG,SAASO,WAEz+
C9B,GAAc,GAAIJ,IACjBmC,QAASL,IAIV9B,EAAWoC,QACVC,aAAa,EACbC,iBAAmB/B,EAAeS,IAAI,gBAAkB,MAIzDZ,EAAYmC,SAASb,GACpBc,iBAAkB7B,EAClB8B,0BAA0B,GAG3B,IAAIC,GAAYtC,EAAYuC,cAC3BC,EAAa,SAAUC,EAAUC,EAAUC,GAC1CA,EAASC,SAAW,SAAUC,GAC7BA,EAAKC,QAAQL,GACZM,eAAgB,4BACd+
L,IAKFvC,GAAeS,IAAI,kBACtB0B,EAAUU,QAAQ,SAAUC,GACvBA,EAAOC,KAAKC,WAAWC,QAAQ,cAAgB,GAClDZ,EAAW,IAAK,iBAAkBS,KAMjCtC,GACH2B,EAAUU,QAAQ,SAAUC,GACvBA,EAAOC,KAAKC,WAAWC,QAhDlB,sBAgDsC,GAC9CZ,EAAW3B,EAAYF,EAAasC,KAIvCjD,EAAYqD,QAEZxD,EAAIyD,KAAK,kCAELzB,GAAgBA+
,EAAa0B,OAAS,GACzC1B,EAAamB,QAAQ,SAAUQ,GAC9B,GAAIC,GAAcvC,EAAYsC,GAC7BE,EAAOD,EAAY7B,IACnB+B,EAAYlE,IAAIC,GAAGc,QAAQC,MAAMR,EAAkBwD,EAAYlC,SAASC,SAASC,QAAQ,OAAQ,IAAM,OAGxG,IAAI7B,IACHmC,QAAS2B,EACTE,WACCC,OAAQ,MACRX,KAAM,GAAIY,QAAO,aACjBlB,SAAU,SAAUC,GAC+
nBpD,IAAIC,GAAGc,QAAQ,iBAEf,IAAIuD,GAAehD,OAAOtB,IAAIuE,MAC7BC,IAAKN,EACLO,SAAU,QACRjD,IAGH,OADA4B,GAAKsB,WAAW,OAASpE,EAAUqE,UAAUL,KACtC,OAIPV,WAWNgB,cAAe,WACd,MAAOrE","file":"../../localService/mockserver.js","sourcesContent":["sap.ui.define([\r\n\t\"sa+
p/ui/core/util/MockServer\",\r\n\t\"sap/base/Log\",\r\n\t\"sap/base/util/UriParameters\",\r\n\t\"sap/ui/util/XMLHelper\"\r\n], function (MockServer, Log, UriParameters, XMLHelper) {\r\n\t\"use strict\";\r\n\tvar oMockServer,\r\n\t\t_sAppModulePath = \"co+
m/sew/integration/hr/sewintegrationmaintain/\",\r\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\treturn {\r\n\r\n\t\t/**\r\n\t\t * Initializes the mock server.\r\n\t\t * You can configure the delay with the URL paramet+
er \"serverDelay\".\r\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\tinit: function () {\r\n\r\n\t\t\tvar oUriParameters = new UriParameters(window.location.href),\r\n\+
t\t\t\tsJsonFilesUrl = sap.ui.require.toUrl(_sJsonFilesModulePath),\r\n\t\t\t\tsManifestUrl = sap.ui.require.toUrl(_sAppModulePath + \"manifest\" + \".json\"),\r\n\t\t\t\tsEntity = \"IntegrationRunSet\",\r\n\t\t\t\tsErrorParam = oUriParameters.get(\"erro+
rType\"),\r\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\toDataSource = oManifest[\"sap.app\"].dataSources,\r\n\t\t\t\toMainDataSource = oDataSource.mainServ+
ice,\r\n\t\t\t\tsMetadataUrl = sap.ui.require.toUrl(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\") + \".xml\"),\r\n\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? o+
MainDataSource.uri : oMainDataSource.uri + \"/\",\r\n\t\t\t\taAnnotations = oMainDataSource.settings.annotations;\r\n\r\n\t\t\toMockServer = new MockServer({\r\n\t\t\t\trootUri: sMockServerUrl\r\n\t\t\t});\r\n\r\n\t\t\t// configure mock server with a del+
ay of 1s\r\n\t\t\tMockServer.config({\r\n\t\t\t\tautoRespond: true,\r\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t});\r\n\r\n\t\t\t// load local mock data\r\n\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\tsMoc+
kdataBaseUrl: sJsonFilesUrl,\r\n\t\t\t\tbGenerateMissingMockData: true\r\n\t\t\t});\r\n\r\n\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\taRequest.response = function (oXhr)+
 {\r\n\t\t\t\t\t\toXhr.respond(iErrCode, {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\r\n\t\t\t\t\t\t}, sMessage);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t// handling the metadata error test\r\n\t\t\tif (oUriParameters.get(\"metad+
ataError\")) {\r\n\t\t\t\taRequests.forEach(function (aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Ha+
ndling request errors\r\n\t\t\tif (sErrorParam) {\r\n\t\t\t\taRequests.forEach(function (aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\+
r\n\t\t\t}\r\n\t\t\toMockServer.start();\r\n\r\n\t\t\tLog.info(\"Running the app with mock data\");\r\n\r\n\t\t\tif (aAnnotations && aAnnotations.length > 0) {\r\n\t\t\t\taAnnotations.forEach(function (sAnnotationName) {\r\n\t\t\t\t\tvar oAnnotation = oD+
ataSource[sAnnotationName],\r\n\t\t\t\t\t\tsUri = oAnnotation.uri,\r\n\t\t\t\t\t\tsLocalUri = sap.ui.require.toUrl(_sAppModulePath + oAnnotation.settings.localUri.replace(\".xml\", \"\") + \".xml\");\r\n\r\n\t\t\t\t\t// backend annotations\r\n\t\t\t\t\tn+
ew MockServer({\r\n\t\t\t\t\t\trootUri: sUri,\r\n\t\t\t\t\t\trequests: [{\r\n\t\t\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\t\t\tpath: new RegExp(\"([?#].*)?\"),\r\n\t\t\t\t\t\t\tresponse: function (oXhr) {\r\n\t\t\t\t\t\t\t\tsap.ui.require(\"jquery.sap.xml\+
");\r\n\r\n\t\t\t\t\t\t\t\tvar oAnnotations = jQuery.sap.sjax({\r\n\t\t\t\t\t\t\t\t\turl: sLocalUri,\r\n\t\t\t\t\t\t\t\t\tdataType: \"xml\"\r\n\t\t\t\t\t\t\t\t}).data;\r\n\r\n\t\t\t\t\t\t\t\toXhr.respondXML(200, {}, XMLHelper.serialize(oAnnotations));\r\+
n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]\r\n\r\n\t\t\t\t\t}).start();\r\n\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t * +
@returns {sap.ui.core.util.MockServer}\r\n\t\t */\r\n\t\tgetMockServer: function () {\r\n\t\t\treturn oMockServer;\r\n\t\t}\r\n\t};\r\n\r\n});"]}                                                                                                              