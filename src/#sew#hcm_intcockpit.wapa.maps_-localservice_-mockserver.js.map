{"version":3,"sources":["localService/mockserver.js"],"names":["sap","ui","define","MockServer","UriParameters","Log","XMLHelper","oMockServer","_sAppModulePath","init","oUriParameters","window","location","href","sJsonFilesUrl","jQuery","getModulePath",+
"sManifestUrl","sErrorParam","get","iErrorCode","oManifest","syncGetJSON","data","oDataSource","dataSources","oMainDataSource","mainService","sMetadataUrl","settings","localUri","replace","sMockServerUrl","test","uri","aAnnotations","annotations","rootUr+
i","config","autoRespond","autoRespondAfter","simulate","sMockdataBaseUrl","bGenerateMissingMockData","aRequests","getRequests","fnResponse","iErrCode","sMessage","aRequest","response","oXhr","respond","Content-Type","forEach","aEntry","path","toString",+
"indexOf","start","info","sAnnotationName","oAnnotation","sUri","sLocalUri","requests","method","RegExp","oAnnotations","sjax","url","dataType","respondXML","serialize","getMockServer"],"mappings":"AAAAA,IAAIC,GAAGC,QACN,8BACA,8BACA,eACA,yBACE,SAAUC,EAAY+
C,EAAeC,EAAKC,GAC5C,YACA,IAAIC,GACHC,EAAkB,+CAGnB,QASCC,KAAM,WACL,GAAIC,GAAiB,GAAIN,GAAcO,OAAOC,SAASC,MACtDC,EAAgBC,OAAOf,IAAIgB,cAbLR,sEActBS,EAAeF,OAAOf,IAAIgB,cAAcR,EAAkB,WAAY,SAEtEU,EAAcR,EAAeS,IAAI,aACjCC,EAA6B,eAAhBF,EAA+B,IAAM,IAClDG,EAAYN,OAAOf,I+
AAIsB,YAAYL,GAAcM,KACjDC,EAAcH,EAAU,WAAWI,YACnCC,EAAkBF,EAAYG,YAC9BC,EAAeb,OAAOf,IAAIgB,cAAcR,EAAkBkB,EAAgBG,SAASC,SAASC,QAAQ,OAAQ,IAAK,QAEjHC,EAAiB,QAAQC,KAAKP,EAAgBQ,KAAOR,EAAgBQ,IAAMR,EAAgBQ,IAAM,IACjGC,EAAeT,EAAgBG,SAASO,WAEzC7B,GAAc,GAAIJ,IACjBkC,QA+
ASL,IAIV7B,EAAWmC,QACVC,aAAa,EACbC,iBAAmB9B,EAAeS,IAAI,gBAAkB,MAIzDZ,EAAYkC,SAASb,GACpBc,iBAAkB5B,EAClB6B,0BAA0B,GAG3B,IAAIC,GAAYrC,EAAYsC,cAC3BC,EAAa,SAAUC,EAAUC,EAAUC,GAC1CA,EAASC,SAAW,SAAUC,GAC7BA,EAAKC,QAAQL,GACZM,eAAgB,4BACdL,IAKFtC,GAAeS,IAAI,kBACt+
ByB,EAAUU,QAAQ,SAAUC,GACvBA,EAAOC,KAAKC,WAAWC,QAAQ,cAAgB,GAClDZ,EAAW,IAAK,iBAAkBS,KAMjCrC,GACH0B,EAAUU,QAAQ,SAAUC,GACvBA,EAAOC,KAAKC,WAAWC,QAhDlB,iBAgDsC,GAC9CZ,EAAW1B,EAAYF,EAAaqC,KAIvChD,EAAYoD,QAEZtD,EAAIuD,KAAK,kCAETzB,EAAamB,QAAQ,SAAUO,GAC9B,GAAIC,G+
AActC,EAAYqC,GAC7BE,EAAOD,EAAY5B,IACnB8B,EAAYjD,OAAOf,IAAIgB,cAAcR,EAAkBsD,EAAYjC,SAASC,SAASC,QAAQ,OAAQ,IAAK,OAG3G,IAAI5B,IACHkC,QAAS0B,EACTE,WACCC,OAAQ,MACRV,KAAM,GAAIW,QAAO,IACjBjB,SAAU,SAAUC,GAEnB,GAAIiB,GAAerD,OAAOf,IAAIqE,MAC7BC,IAAKN,EACLO,SAAU,QAC+
RhD,IAGH,OADA4B,GAAKqB,WAAW,OAASlE,EAAUmE,UAAUL,KACtC,OAIPT,WAULe,cAAe,WACd,MAAOnE","file":"../../localService/mockserver.js","sourcesContent":["sap.ui.define([\r\n\t\"sap/ui/core/util/MockServer\",\r\n\t\"sap/base/util/UriParameters\",\r\n\t\"sap/base/L+
og\",\r\n\t\"sap/ui/util/XMLHelper\"\r\n], function (MockServer, UriParameters, Log, XMLHelper) {\r\n\t\"use strict\";\r\n\tvar oMockServer,\r\n\t\t_sAppModulePath = \"com.sew.integration.hr.sewintegrationcockpit/\",\r\n\t\t_sJsonFilesModulePath = _sAppM+
odulePath + \"localService/mockdata\";\r\n\r\n\treturn {\r\n\r\n\t\t/**\r\n\t\t * Initializes the mock server.\r\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t * The local mock data in this folder is returned instead +
of the real data for testing.\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\tinit: function () {\r\n\t\t\tvar oUriParameters = new UriParameters(window.location.href),\r\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\tsManif+
estUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\tsEntity = \"DV_INTCENTER\",\r\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t+
\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\toDataSource = oManifest[\"sap.app\"].dataSources,\r\n\t\t\t\toMainDataSource = oDataSource.mainService,\r\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSour+
ce.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\",\r\n\t\t\t\taAnnotations = oMainDat+
aSource.settings.annotations;\r\n\r\n\t\t\toMockServer = new MockServer({\r\n\t\t\t\trootUri: sMockServerUrl\r\n\t\t\t});\r\n\r\n\t\t\t// configure mock server with a delay of 1s\r\n\t\t\tMockServer.config({\r\n\t\t\t\tautoRespond: true,\r\n\t\t\t\tautoR+
espondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t});\r\n\r\n\t\t\t// load local mock data\r\n\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\r\n\t\t\t\tbGenerateMissingMockData: true\r\n\t\t\t});\+
r\n\r\n\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\taRequest.response = function (oXhr) {\r\n\t\t\t\t\t\toXhr.respond(iErrCode, {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"text+
/plain;charset=utf-8\"\r\n\t\t\t\t\t\t}, sMessage);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t// handling the metadata error test\r\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\taRequests.forEach(function (aEntry) {\r\n\t\t\t\t\tif (aEn+
try.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Handling request errors\r\n\t\t\tif (sErrorParam) {\r\n\t\t\t\taRequests.forEach(funct+
ion (aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toMockServer.start();\r\n\r\n\t\t\tLog.info(\"Running the app wit+
h mock data\");\r\n\r\n\t\t\taAnnotations.forEach(function (sAnnotationName) {\r\n\t\t\t\tvar oAnnotation = oDataSource[sAnnotationName],\r\n\t\t\t\t\tsUri = oAnnotation.uri,\r\n\t\t\t\t\tsLocalUri = jQuery.sap.getModulePath(_sAppModulePath + oAnnotation+
.settings.localUri.replace(\".xml\", \"\"), \".xml\");\r\n\r\n\t\t\t\t///annotiaons\r\n\t\t\t\tnew MockServer({\r\n\t\t\t\t\trootUri: sUri,\r\n\t\t\t\t\trequests: [{\r\n\t\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\t\tpath: new RegExp(\"\"),\r\n\t\t\t\t\t\tre+
sponse: function (oXhr) {\r\n\r\n\t\t\t\t\t\t\tvar oAnnotations = jQuery.sap.sjax({\r\n\t\t\t\t\t\t\t\turl: sLocalUri,\r\n\t\t\t\t\t\t\t\tdataType: \"xml\"\r\n\t\t\t\t\t\t\t}).data;\r\n\r\n\t\t\t\t\t\t\toXhr.respondXML(200, {}, XMLHelper.serialize(oAnnot+
ations));\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}]\r\n\r\n\t\t\t\t}).start();\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t * @returns +
{sap.ui.core.util.MockServer}\r\n\t\t */\r\n\t\tgetMockServer: function () {\r\n\t\t\treturn oMockServer;\r\n\t\t}\r\n\t};\r\n\r\n});"]}                                                                                                                       